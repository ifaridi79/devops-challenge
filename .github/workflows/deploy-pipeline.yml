name: Deploy Pipeline

on:
  # Manual trigger from the UI
  workflow_dispatch:
    inputs:
      message:
        description: 'Deploy application to Kubernetes'

  workflow_run:
    workflows: [Infrastructure Pipeline]
    types: [completed]
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  CLUSTER_RESOURCE_GROUP: "terraform-github-actions-rg"
  CLUSTER_NAME: "terraform-resource-aks"
  NAMESPACE: default
  DEPLOYMENT_MANIFEST_PATH: "k8-deployment.yaml"


jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout
    environment: Azure    

    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@master

      - uses: azure/setup-kubectl@v2.0

      # Set the target Azure Kubernetes Service (AKS) cluster. 
      - uses: Azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}

      # Create namespace if doesn't exist
      - run: |
          kubectl create namespace ${{ env.NAMESPACE }} --dry-run -o json | kubectl apply -f -

      # Create imagepullsecret for Azure Container registry (ACR)
      - uses: Azure/k8s-create-secret@v1.1
        with:
          container-registry-url: ${{ env.REGISTRY }}
          container-registry-username: ${{ github.actor }}
          container-registry-password: ${{ secrets.GITHUB_TOKEN }}
          secret-name: github-secrets
          namespace: ${{ env.NAMESPACE }}

      # Deploy app to AKS
      - uses: Azure/k8s-deploy@v4
        with:
          manifests: |
            manifests/k8-deployment.yaml
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          imagepullsecrets: |
            ${{ env.REGISTRY }}-registry-connection
          namespace: ${{ env.NAMESPACE }}